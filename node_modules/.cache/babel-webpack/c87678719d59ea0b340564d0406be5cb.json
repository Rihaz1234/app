{"ast":null,"code":"import _asyncToGenerator from \"/home/probeplus/Projects/XVue/XVue-main/app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { EventEmitter } from '@angular/core';\nimport { AlertConfigurationStoreActions, AlertConfigurationStoreSelectors } from \"../store\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/common.service\";\nimport * as i2 from \"@services/backendapi.service\";\nimport * as i3 from \"@services/authentication.service\";\nimport * as i4 from \"@services/snackbar.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@ngrx/store\";\nimport * as i7 from \"../alert-destination/alert-destination.component\";\nexport class DestinationSettingsComponent {\n  constructor(commonService, backendApiService, autheticationService, snackbar, dialog, store$) {\n    this.commonService = commonService;\n    this.backendApiService = backendApiService;\n    this.autheticationService = autheticationService;\n    this.snackbar = snackbar;\n    this.dialog = dialog;\n    this.store$ = store$;\n    this.cfId = \"\";\n    this.alertGroupId = null;\n    this.subscriptions = [];\n    this.reloadData = new EventEmitter(true);\n  }\n\n  ngOnInit() {\n    this.cfId = this.autheticationService.getCfId();\n    this.fetchContactList();\n    this.alertGroupId$ = this.store$.select(AlertConfigurationStoreSelectors.getAlertGroupId);\n    this.alertDestinationSettings$ = this.store$.select(AlertConfigurationStoreSelectors.getDestinationAlertConfigurations);\n    this.alertDestinationSettings$.subscribe(data => {\n      var _a, _b;\n\n      this.alertDestinationSettings = Object.assign({}, data);\n      this.alertDestinationSettings.UserData = (_b = (_a = this.alertDestinationSettings) === null || _a === void 0 ? void 0 : _a.UserData) === null || _b === void 0 ? void 0 : _b.map(user => {\n        return Object.assign(Object.assign({}, user), {\n          displayName: `${user === null || user === void 0 ? void 0 : user.firstName} ${user === null || user === void 0 ? void 0 : user.lastName}`,\n          userId: user.id\n        });\n      });\n      this.alertDestinationSettingsCopy = JSON.parse(JSON.stringify(this.alertDestinationSettings));\n    });\n    this.subscriptions.push(this.commonService.destinationAlertEditSubmit.subscribe(isSubmit => {\n      if (isSubmit) {\n        this.updateDestinationAlerts();\n      }\n    }));\n    this.alertGroupId$.subscribe(data => {\n      this.alertGroupId = data;\n    });\n  }\n\n  valueUpdated(event, type) {\n    if (type === 'clinical') {\n      this.alertDestinationSettings.Setting = JSON.parse(event);\n    } else {\n      this.alertDestinationSettings.SettingTech = JSON.parse(event);\n    }\n\n    if (JSON.stringify(this.alertDestinationSettings) !== JSON.stringify(this.alertDestinationSettingsCopy)) {\n      this.commonService.setSettingsAlertActionButtons(true);\n    } else {\n      this.commonService.setSettingsAlertActionButtons(false);\n    }\n  }\n\n  updateDestinationAlerts() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        let resp;\n\n        if (_this.alertGroupId) {\n          if (_this.alertDestinationSettings.GroupId === 'ROOT') {\n            _this.alertDestinationSettings.AlertDestId = '';\n          }\n\n          _this.alertDestinationSettings = Object.assign(Object.assign({}, _this.alertDestinationSettings), {\n            GroupId: _this.alertGroupId,\n            FacilityId: _this.cfId\n          });\n          const url = \"alert-settings/group-edit/alert-destination-settings\";\n          resp = yield _this.backendApiService.post(environment.dataApiUrl + url, _this.alertDestinationSettings).toPromise();\n        } else {\n          const url = \"alert-settings/root/\" + _this.cfId + \"/alert-destination-settings\";\n          resp = yield _this.backendApiService.post(environment.dataApiUrl + url, _this.alertDestinationSettings).toPromise();\n        }\n\n        if (resp.status === \"OK\") {\n          _this.reloadData.emit();\n\n          _this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n\n          _this.commonService.setSettingsAlertActionButtons(false);\n\n          _this.commonService.setDestinationAlertEditSubmit(false);\n        }\n      } catch (error) {}\n    })();\n  }\n\n  fetchContactList() {\n    let url = \"clinical-facilities/contacts?page=1&size=1000\";\n    this.store$.dispatch(new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction({\n      url\n    }));\n    this.store$.select(AlertConfigurationStoreSelectors.getAlertConfigurationError).subscribe(data => {});\n  }\n\n  ngOnDestroy() {\n    this.reloadData.emit();\n    this.subscriptions.forEach(subscriptions => subscriptions.unsubscribe());\n  }\n\n}\n\nDestinationSettingsComponent.ɵfac = function DestinationSettingsComponent_Factory(t) {\n  return new (t || DestinationSettingsComponent)(i0.ɵɵdirectiveInject(i1.CommonService), i0.ɵɵdirectiveInject(i2.BackendApiService), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.SnackbarService), i0.ɵɵdirectiveInject(i5.MatDialog), i0.ɵɵdirectiveInject(i6.Store));\n};\n\nDestinationSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DestinationSettingsComponent,\n  selectors: [[\"app-destination-settings\"]],\n  outputs: {\n    reloadData: \"reloadData\"\n  },\n  decls: 4,\n  vars: 8,\n  consts: [[1, \"px-2\", \"py-3\"], [1, \"table-container\", \"alert-destination-table\", \"table-responsive-sm\"], [3, \"alertType\", \"alertDestinationSettings\", \"alertDestinationSettingsCopy\", \"userData\", \"updateDestination\"]],\n  template: function DestinationSettingsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"app-alert-destination\", 2);\n      i0.ɵɵlistener(\"updateDestination\", function DestinationSettingsComponent_Template_app_alert_destination_updateDestination_2_listener($event) {\n        return ctx.valueUpdated($event, \"clinical\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"app-alert-destination\", 2);\n      i0.ɵɵlistener(\"updateDestination\", function DestinationSettingsComponent_Template_app_alert_destination_updateDestination_3_listener($event) {\n        return ctx.valueUpdated($event, \"tech\");\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"alertType\", \"Clinical\")(\"alertDestinationSettings\", ctx.alertDestinationSettings.Setting)(\"alertDestinationSettingsCopy\", ctx.alertDestinationSettingsCopy.Setting)(\"userData\", ctx.alertDestinationSettings == null ? null : ctx.alertDestinationSettings.UserData);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"alertType\", \"Technical\")(\"alertDestinationSettings\", ctx.alertDestinationSettings.SettingTech)(\"alertDestinationSettingsCopy\", ctx.alertDestinationSettingsCopy.SettingTech)(\"userData\", ctx.alertDestinationSettings == null ? null : ctx.alertDestinationSettings.UserData);\n    }\n  },\n  directives: [i7.AlertDestinationComponent],\n  styles: [\".alert-destination-table[_ngcontent-%COMP%] {\\n  max-height: calc(100vh - 360px);\\n  overflow-y: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc3RpbmF0aW9uLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksK0JBQUE7RUFDQSxnQkFBQTtBQUNKIiwiZmlsZSI6ImRlc3RpbmF0aW9uLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFsZXJ0LWRlc3RpbmF0aW9uLXRhYmxle1xuICAgIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAzNjBweCk7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgfVxuIl19 */\"]\n});","map":{"version":3,"sources":["/home/probeplus/Projects/XVue/XVue-main/app/src/app/settings/alert-configuration/destination-settings/destination-settings.component.ts"],"names":["EventEmitter","AlertConfigurationStoreActions","AlertConfigurationStoreSelectors","environment","i0","i1","i2","i3","i4","i5","i6","i7","DestinationSettingsComponent","constructor","commonService","backendApiService","autheticationService","snackbar","dialog","store$","cfId","alertGroupId","subscriptions","reloadData","ngOnInit","getCfId","fetchContactList","alertGroupId$","select","getAlertGroupId","alertDestinationSettings$","getDestinationAlertConfigurations","subscribe","data","_a","_b","alertDestinationSettings","Object","assign","UserData","map","user","displayName","firstName","lastName","userId","id","alertDestinationSettingsCopy","JSON","parse","stringify","push","destinationAlertEditSubmit","isSubmit","updateDestinationAlerts","valueUpdated","event","type","Setting","SettingTech","setSettingsAlertActionButtons","resp","GroupId","AlertDestId","FacilityId","url","post","dataApiUrl","toPromise","status","emit","openCustomSnackBar","setDestinationAlertEditSubmit","error","dispatch","loadClinicalFacilityContactsRequestAction","getAlertConfigurationError","ngOnDestroy","forEach","unsubscribe","ɵfac","DestinationSettingsComponent_Factory","t","ɵɵdirectiveInject","CommonService","BackendApiService","AuthenticationService","SnackbarService","MatDialog","Store","ɵcmp","ɵɵdefineComponent","selectors","outputs","decls","vars","consts","template","DestinationSettingsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","DestinationSettingsComponent_Template_app_alert_destination_updateDestination_2_listener","$event","ɵɵelementEnd","DestinationSettingsComponent_Template_app_alert_destination_updateDestination_3_listener","ɵɵadvance","ɵɵproperty","directives","AlertDestinationComponent","styles"],"mappings":";AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,8BAAT,EAAyCC,gCAAzC,QAAiF,UAAjF;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,0BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,8BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,kCAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,4BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,0BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,aAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,kDAApB;AACA,OAAO,MAAMC,4BAAN,CAAmC;AACtCC,EAAAA,WAAW,CAACC,aAAD,EAAgBC,iBAAhB,EAAmCC,oBAAnC,EAAyDC,QAAzD,EAAmEC,MAAnE,EAA2EC,MAA3E,EAAmF;AAC1F,SAAKL,aAAL,GAAqBA,aAArB;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,oBAAL,GAA4BA,oBAA5B;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,UAAL,GAAkB,IAAIvB,YAAJ,CAAiB,IAAjB,CAAlB;AACH;;AACDwB,EAAAA,QAAQ,GAAG;AACP,SAAKJ,IAAL,GAAY,KAAKJ,oBAAL,CAA0BS,OAA1B,EAAZ;AACA,SAAKC,gBAAL;AACA,SAAKC,aAAL,GAAqB,KAAKR,MAAL,CAAYS,MAAZ,CAAmB1B,gCAAgC,CAAC2B,eAApD,CAArB;AACA,SAAKC,yBAAL,GAAiC,KAAKX,MAAL,CAAYS,MAAZ,CAAmB1B,gCAAgC,CAAC6B,iCAApD,CAAjC;AACA,SAAKD,yBAAL,CAA+BE,SAA/B,CAA0CC,IAAD,IAAU;AAC/C,UAAIC,EAAJ,EAAQC,EAAR;;AACA,WAAKC,wBAAL,GAAgCC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,IAAlB,CAAhC;AACA,WAAKG,wBAAL,CAA8BG,QAA9B,GAAyC,CAACJ,EAAE,GAAG,CAACD,EAAE,GAAG,KAAKE,wBAAX,MAAyC,IAAzC,IAAiDF,EAAE,KAAK,KAAK,CAA7D,GAAiE,KAAK,CAAtE,GAA0EA,EAAE,CAACK,QAAnF,MAAiG,IAAjG,IAAyGJ,EAAE,KAAK,KAAK,CAArH,GAAyH,KAAK,CAA9H,GAAkIA,EAAE,CAACK,GAAH,CAAOC,IAAI,IAAI;AACtL,eAAOJ,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBG,IAAlB,CAAd,EAAuC;AAAEC,UAAAA,WAAW,EAAG,GAAED,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACE,SAAU,IAAGF,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACG,QAAS,EAA1I;AAA6IC,UAAAA,MAAM,EAAEJ,IAAI,CAACK;AAA1J,SAAvC,CAAP;AACH,OAF0K,CAA3K;AAGA,WAAKC,4BAAL,GAAoCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKd,wBAApB,CAAX,CAApC;AACH,KAPD;AAQA,SAAKd,aAAL,CAAmB6B,IAAnB,CAAwB,KAAKrC,aAAL,CAAmBsC,0BAAnB,CAA8CpB,SAA9C,CAAyDqB,QAAD,IAAc;AAC1F,UAAIA,QAAJ,EAAc;AACV,aAAKC,uBAAL;AACH;AACJ,KAJuB,CAAxB;AAKA,SAAK3B,aAAL,CAAmBK,SAAnB,CAA8BC,IAAD,IAAU;AACnC,WAAKZ,YAAL,GAAoBY,IAApB;AACH,KAFD;AAGH;;AACDsB,EAAAA,YAAY,CAACC,KAAD,EAAQC,IAAR,EAAc;AACtB,QAAIA,IAAI,KAAK,UAAb,EAAyB;AACrB,WAAKrB,wBAAL,CAA8BsB,OAA9B,GAAwCV,IAAI,CAACC,KAAL,CAAWO,KAAX,CAAxC;AACH,KAFD,MAGK;AACD,WAAKpB,wBAAL,CAA8BuB,WAA9B,GAA4CX,IAAI,CAACC,KAAL,CAAWO,KAAX,CAA5C;AACH;;AACD,QAAIR,IAAI,CAACE,SAAL,CAAe,KAAKd,wBAApB,MAAkDY,IAAI,CAACE,SAAL,CAAe,KAAKH,4BAApB,CAAtD,EAAyG;AACrG,WAAKjC,aAAL,CAAmB8C,6BAAnB,CAAiD,IAAjD;AACH,KAFD,MAGK;AACD,WAAK9C,aAAL,CAAmB8C,6BAAnB,CAAiD,KAAjD;AACH;AACJ;;AACKN,EAAAA,uBAAuB,GAAG;AAAA;;AAAA;AAC5B,UAAI;AACA,YAAIO,IAAJ;;AACA,YAAI,KAAI,CAACxC,YAAT,EAAuB;AACnB,cAAI,KAAI,CAACe,wBAAL,CAA8B0B,OAA9B,KAA0C,MAA9C,EAAsD;AAClD,YAAA,KAAI,CAAC1B,wBAAL,CAA8B2B,WAA9B,GAA4C,EAA5C;AACH;;AACD,UAAA,KAAI,CAAC3B,wBAAL,GAAgCC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAI,CAACF,wBAAvB,CAAd,EAAgE;AAAE0B,YAAAA,OAAO,EAAE,KAAI,CAACzC,YAAhB;AAA8B2C,YAAAA,UAAU,EAAE,KAAI,CAAC5C;AAA/C,WAAhE,CAAhC;AACA,gBAAM6C,GAAG,GAAG,sDAAZ;AACAJ,UAAAA,IAAI,SAAS,KAAI,CAAC9C,iBAAL,CACRmD,IADQ,CACH/D,WAAW,CAACgE,UAAZ,GAAyBF,GADtB,EAC2B,KAAI,CAAC7B,wBADhC,EAERgC,SAFQ,EAAb;AAGH,SATD,MAUK;AACD,gBAAMH,GAAG,GAAG,yBAAyB,KAAI,CAAC7C,IAA9B,GAAqC,6BAAjD;AACAyC,UAAAA,IAAI,SAAS,KAAI,CAAC9C,iBAAL,CACRmD,IADQ,CACH/D,WAAW,CAACgE,UAAZ,GAAyBF,GADtB,EAC2B,KAAI,CAAC7B,wBADhC,EAERgC,SAFQ,EAAb;AAGH;;AACD,YAAIP,IAAI,CAACQ,MAAL,KAAgB,IAApB,EAA0B;AACtB,UAAA,KAAI,CAAC9C,UAAL,CAAgB+C,IAAhB;;AACA,UAAA,KAAI,CAACrD,QAAL,CAAcsD,kBAAd,CAAiC,wCAAjC,EAA2E,QAA3E,EAAqF,QAArF;;AACA,UAAA,KAAI,CAACzD,aAAL,CAAmB8C,6BAAnB,CAAiD,KAAjD;;AACA,UAAA,KAAI,CAAC9C,aAAL,CAAmB0D,6BAAnB,CAAiD,KAAjD;AACH;AACJ,OAxBD,CAyBA,OAAOC,KAAP,EAAc,CAAG;AA1BW;AA2B/B;;AACD/C,EAAAA,gBAAgB,GAAG;AACf,QAAIuC,GAAG,GAAG,+CAAV;AACA,SAAK9C,MAAL,CAAYuD,QAAZ,CAAqB,IAAIzE,8BAA8B,CAAC0E,yCAAnC,CAA6E;AAAEV,MAAAA;AAAF,KAA7E,CAArB;AACA,SAAK9C,MAAL,CACKS,MADL,CACY1B,gCAAgC,CAAC0E,0BAD7C,EAEK5C,SAFL,CAEgBC,IAAD,IAAU,CAAG,CAF5B;AAGH;;AACD4C,EAAAA,WAAW,GAAG;AACV,SAAKtD,UAAL,CAAgB+C,IAAhB;AACA,SAAKhD,aAAL,CAAmBwD,OAAnB,CAA4BxD,aAAD,IAAmBA,aAAa,CAACyD,WAAd,EAA9C;AACH;;AAvFqC;;AAyF1CnE,4BAA4B,CAACoE,IAA7B,GAAoC,SAASC,oCAAT,CAA8CC,CAA9C,EAAiD;AAAE,SAAO,KAAKA,CAAC,IAAItE,4BAAV,EAAwCR,EAAE,CAAC+E,iBAAH,CAAqB9E,EAAE,CAAC+E,aAAxB,CAAxC,EAAgFhF,EAAE,CAAC+E,iBAAH,CAAqB7E,EAAE,CAAC+E,iBAAxB,CAAhF,EAA4HjF,EAAE,CAAC+E,iBAAH,CAAqB5E,EAAE,CAAC+E,qBAAxB,CAA5H,EAA4KlF,EAAE,CAAC+E,iBAAH,CAAqB3E,EAAE,CAAC+E,eAAxB,CAA5K,EAAsNnF,EAAE,CAAC+E,iBAAH,CAAqB1E,EAAE,CAAC+E,SAAxB,CAAtN,EAA0PpF,EAAE,CAAC+E,iBAAH,CAAqBzE,EAAE,CAAC+E,KAAxB,CAA1P,CAAP;AAAmS,CAA1X;;AACA7E,4BAA4B,CAAC8E,IAA7B,GAAoC,aAActF,EAAE,CAACuF,iBAAH,CAAqB;AAAElC,EAAAA,IAAI,EAAE7C,4BAAR;AAAsCgF,EAAAA,SAAS,EAAE,CAAC,CAAC,0BAAD,CAAD,CAAjD;AAAiFC,EAAAA,OAAO,EAAE;AAAEtE,IAAAA,UAAU,EAAE;AAAd,GAA1F;AAAwHuE,EAAAA,KAAK,EAAE,CAA/H;AAAkIC,EAAAA,IAAI,EAAE,CAAxI;AAA2IC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,MAAJ,EAAY,MAAZ,CAAD,EAAsB,CAAC,CAAD,EAAI,iBAAJ,EAAuB,yBAAvB,EAAkD,qBAAlD,CAAtB,EAAgG,CAAC,CAAD,EAAI,WAAJ,EAAiB,0BAAjB,EAA6C,8BAA7C,EAA6E,UAA7E,EAAyF,mBAAzF,CAAhG,CAAnJ;AAAmWC,EAAAA,QAAQ,EAAE,SAASC,qCAAT,CAA+CC,EAA/C,EAAmDC,GAAnD,EAAwD;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AAClf/F,MAAAA,EAAE,CAACiG,cAAH,CAAkB,CAAlB,EAAqB,KAArB,EAA4B,CAA5B;AACAjG,MAAAA,EAAE,CAACiG,cAAH,CAAkB,CAAlB,EAAqB,KAArB,EAA4B,CAA5B;AACAjG,MAAAA,EAAE,CAACiG,cAAH,CAAkB,CAAlB,EAAqB,uBAArB,EAA8C,CAA9C;AACAjG,MAAAA,EAAE,CAACkG,UAAH,CAAc,mBAAd,EAAmC,SAASC,wFAAT,CAAkGC,MAAlG,EAA0G;AAAE,eAAOJ,GAAG,CAAC7C,YAAJ,CAAiBiD,MAAjB,EAAyB,UAAzB,CAAP;AAA8C,OAA7L;AACApG,MAAAA,EAAE,CAACqG,YAAH;AACArG,MAAAA,EAAE,CAACiG,cAAH,CAAkB,CAAlB,EAAqB,uBAArB,EAA8C,CAA9C;AACAjG,MAAAA,EAAE,CAACkG,UAAH,CAAc,mBAAd,EAAmC,SAASI,wFAAT,CAAkGF,MAAlG,EAA0G;AAAE,eAAOJ,GAAG,CAAC7C,YAAJ,CAAiBiD,MAAjB,EAAyB,MAAzB,CAAP;AAA0C,OAAzL;AACApG,MAAAA,EAAE,CAACqG,YAAH;AACArG,MAAAA,EAAE,CAACqG,YAAH;AACArG,MAAAA,EAAE,CAACqG,YAAH;AACH;;AAAC,QAAIN,EAAE,GAAG,CAAT,EAAY;AACV/F,MAAAA,EAAE,CAACuG,SAAH,CAAa,CAAb;AACAvG,MAAAA,EAAE,CAACwG,UAAH,CAAc,WAAd,EAA2B,UAA3B,EAAuC,0BAAvC,EAAmER,GAAG,CAAChE,wBAAJ,CAA6BsB,OAAhG,EAAyG,8BAAzG,EAAyI0C,GAAG,CAACrD,4BAAJ,CAAiCW,OAA1K,EAAmL,UAAnL,EAA+L0C,GAAG,CAAChE,wBAAJ,IAAgC,IAAhC,GAAuC,IAAvC,GAA8CgE,GAAG,CAAChE,wBAAJ,CAA6BG,QAA1Q;AACAnC,MAAAA,EAAE,CAACuG,SAAH,CAAa,CAAb;AACAvG,MAAAA,EAAE,CAACwG,UAAH,CAAc,WAAd,EAA2B,WAA3B,EAAwC,0BAAxC,EAAoER,GAAG,CAAChE,wBAAJ,CAA6BuB,WAAjG,EAA8G,8BAA9G,EAA8IyC,GAAG,CAACrD,4BAAJ,CAAiCY,WAA/K,EAA4L,UAA5L,EAAwMyC,GAAG,CAAChE,wBAAJ,IAAgC,IAAhC,GAAuC,IAAvC,GAA8CgE,GAAG,CAAChE,wBAAJ,CAA6BG,QAAnR;AACH;AAAE,GAhBgE;AAgB9DsE,EAAAA,UAAU,EAAE,CAAClG,EAAE,CAACmG,yBAAJ,CAhBkD;AAgBlBC,EAAAA,MAAM,EAAE,CAAC,shBAAD;AAhBU,CAArB,CAAlD","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { AlertConfigurationStoreActions, AlertConfigurationStoreSelectors } from \"../store\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/common.service\";\nimport * as i2 from \"@services/backendapi.service\";\nimport * as i3 from \"@services/authentication.service\";\nimport * as i4 from \"@services/snackbar.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@ngrx/store\";\nimport * as i7 from \"../alert-destination/alert-destination.component\";\nexport class DestinationSettingsComponent {\n    constructor(commonService, backendApiService, autheticationService, snackbar, dialog, store$) {\n        this.commonService = commonService;\n        this.backendApiService = backendApiService;\n        this.autheticationService = autheticationService;\n        this.snackbar = snackbar;\n        this.dialog = dialog;\n        this.store$ = store$;\n        this.cfId = \"\";\n        this.alertGroupId = null;\n        this.subscriptions = [];\n        this.reloadData = new EventEmitter(true);\n    }\n    ngOnInit() {\n        this.cfId = this.autheticationService.getCfId();\n        this.fetchContactList();\n        this.alertGroupId$ = this.store$.select(AlertConfigurationStoreSelectors.getAlertGroupId);\n        this.alertDestinationSettings$ = this.store$.select(AlertConfigurationStoreSelectors.getDestinationAlertConfigurations);\n        this.alertDestinationSettings$.subscribe((data) => {\n            var _a, _b;\n            this.alertDestinationSettings = Object.assign({}, data);\n            this.alertDestinationSettings.UserData = (_b = (_a = this.alertDestinationSettings) === null || _a === void 0 ? void 0 : _a.UserData) === null || _b === void 0 ? void 0 : _b.map(user => {\n                return Object.assign(Object.assign({}, user), { displayName: `${user === null || user === void 0 ? void 0 : user.firstName} ${user === null || user === void 0 ? void 0 : user.lastName}`, userId: user.id });\n            });\n            this.alertDestinationSettingsCopy = JSON.parse(JSON.stringify(this.alertDestinationSettings));\n        });\n        this.subscriptions.push(this.commonService.destinationAlertEditSubmit.subscribe((isSubmit) => {\n            if (isSubmit) {\n                this.updateDestinationAlerts();\n            }\n        }));\n        this.alertGroupId$.subscribe((data) => {\n            this.alertGroupId = data;\n        });\n    }\n    valueUpdated(event, type) {\n        if (type === 'clinical') {\n            this.alertDestinationSettings.Setting = JSON.parse(event);\n        }\n        else {\n            this.alertDestinationSettings.SettingTech = JSON.parse(event);\n        }\n        if (JSON.stringify(this.alertDestinationSettings) !== JSON.stringify(this.alertDestinationSettingsCopy)) {\n            this.commonService.setSettingsAlertActionButtons(true);\n        }\n        else {\n            this.commonService.setSettingsAlertActionButtons(false);\n        }\n    }\n    async updateDestinationAlerts() {\n        try {\n            let resp;\n            if (this.alertGroupId) {\n                if (this.alertDestinationSettings.GroupId === 'ROOT') {\n                    this.alertDestinationSettings.AlertDestId = '';\n                }\n                this.alertDestinationSettings = Object.assign(Object.assign({}, this.alertDestinationSettings), { GroupId: this.alertGroupId, FacilityId: this.cfId });\n                const url = \"alert-settings/group-edit/alert-destination-settings\";\n                resp = await this.backendApiService\n                    .post(environment.dataApiUrl + url, this.alertDestinationSettings)\n                    .toPromise();\n            }\n            else {\n                const url = \"alert-settings/root/\" + this.cfId + \"/alert-destination-settings\";\n                resp = await this.backendApiService\n                    .post(environment.dataApiUrl + url, this.alertDestinationSettings)\n                    .toPromise();\n            }\n            if (resp.status === \"OK\") {\n                this.reloadData.emit();\n                this.snackbar.openCustomSnackBar(\"Settings has been updated successfully\", 'bottom', 'center');\n                this.commonService.setSettingsAlertActionButtons(false);\n                this.commonService.setDestinationAlertEditSubmit(false);\n            }\n        }\n        catch (error) { }\n    }\n    fetchContactList() {\n        let url = \"clinical-facilities/contacts?page=1&size=1000\";\n        this.store$.dispatch(new AlertConfigurationStoreActions.loadClinicalFacilityContactsRequestAction({ url }));\n        this.store$\n            .select(AlertConfigurationStoreSelectors.getAlertConfigurationError)\n            .subscribe((data) => { });\n    }\n    ngOnDestroy() {\n        this.reloadData.emit();\n        this.subscriptions.forEach((subscriptions) => subscriptions.unsubscribe());\n    }\n}\nDestinationSettingsComponent.ɵfac = function DestinationSettingsComponent_Factory(t) { return new (t || DestinationSettingsComponent)(i0.ɵɵdirectiveInject(i1.CommonService), i0.ɵɵdirectiveInject(i2.BackendApiService), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.SnackbarService), i0.ɵɵdirectiveInject(i5.MatDialog), i0.ɵɵdirectiveInject(i6.Store)); };\nDestinationSettingsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DestinationSettingsComponent, selectors: [[\"app-destination-settings\"]], outputs: { reloadData: \"reloadData\" }, decls: 4, vars: 8, consts: [[1, \"px-2\", \"py-3\"], [1, \"table-container\", \"alert-destination-table\", \"table-responsive-sm\"], [3, \"alertType\", \"alertDestinationSettings\", \"alertDestinationSettingsCopy\", \"userData\", \"updateDestination\"]], template: function DestinationSettingsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"app-alert-destination\", 2);\n        i0.ɵɵlistener(\"updateDestination\", function DestinationSettingsComponent_Template_app_alert_destination_updateDestination_2_listener($event) { return ctx.valueUpdated($event, \"clinical\"); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"app-alert-destination\", 2);\n        i0.ɵɵlistener(\"updateDestination\", function DestinationSettingsComponent_Template_app_alert_destination_updateDestination_3_listener($event) { return ctx.valueUpdated($event, \"tech\"); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"alertType\", \"Clinical\")(\"alertDestinationSettings\", ctx.alertDestinationSettings.Setting)(\"alertDestinationSettingsCopy\", ctx.alertDestinationSettingsCopy.Setting)(\"userData\", ctx.alertDestinationSettings == null ? null : ctx.alertDestinationSettings.UserData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"alertType\", \"Technical\")(\"alertDestinationSettings\", ctx.alertDestinationSettings.SettingTech)(\"alertDestinationSettingsCopy\", ctx.alertDestinationSettingsCopy.SettingTech)(\"userData\", ctx.alertDestinationSettings == null ? null : ctx.alertDestinationSettings.UserData);\n    } }, directives: [i7.AlertDestinationComponent], styles: [\".alert-destination-table[_ngcontent-%COMP%] {\\n  max-height: calc(100vh - 360px);\\n  overflow-y: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc3RpbmF0aW9uLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksK0JBQUE7RUFDQSxnQkFBQTtBQUNKIiwiZmlsZSI6ImRlc3RpbmF0aW9uLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFsZXJ0LWRlc3RpbmF0aW9uLXRhYmxle1xuICAgIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAzNjBweCk7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgfVxuIl19 */\"] });\n"]},"metadata":{},"sourceType":"module"}