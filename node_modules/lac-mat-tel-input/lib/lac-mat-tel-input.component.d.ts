import { ElementRef, EventEmitter, ChangeDetectorRef } from '@angular/core';
import type { OnInit, OnDestroy } from '@angular/core';
import { MatFormFieldControl } from '@angular/material/form-field';
import { MatInput } from '@angular/material/input';
import { Subject } from 'rxjs';
import { NgControl } from '@angular/forms';
import { FocusMonitor } from '@angular/cdk/a11y';
import { CountryCode } from 'libphonenumber-js';
import * as ɵngcc0 from '@angular/core';
export declare class LacMatTelInputComponent implements OnInit, OnDestroy, MatFormFieldControl<string> {
    ngControl: NgControl;
    private fm;
    private elRef;
    private changeDetector;
    blur: EventEmitter<any>;
    PhoneNumberMaxDigits: number;
    phone: string;
    phoneInput: MatInput;
    maxInputLength: number;
    countryChange: Subject<CountryCode>;
    private selectedCountry;
    stateChanges: Subject<void>;
    _value: string;
    set value(v: string | null);
    static nextId: number;
    id: string;
    private _placeholder;
    get placeholder(): string;
    set placeholder(val: string);
    focused: boolean;
    get empty(): boolean;
    get shouldLabelFloat(): boolean;
    private _required;
    get required(): boolean;
    set required(req: boolean);
    private inputDisabled;
    get disabled(): boolean;
    set disabled(value: boolean);
    get errorState(): boolean;
    controlType?: string;
    autofilled?: boolean;
    describedBy: string;
    setDescribedByIds(ids: string[]): void;
    onContainerClick(event: MouseEvent): void;
    writeValue(value: string): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    onTouched: () => void;
    propagateChange: (_: any) => void;
    private _internationalFormat;
    get internationalFormat(): boolean;
    set internationalFormat(format: boolean);
    constructor(ngControl: NgControl, fm: FocusMonitor, elRef: ElementRef<HTMLElement>, changeDetector: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onCountrySelected(code: CountryCode, noPhoneReset?: boolean): void;
    onInputChanged(e: string): void;
    onInputKeyPress(event: KeyboardEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<LacMatTelInputComponent, [{ optional: true; self: true; }, null, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<LacMatTelInputComponent, "lac-mat-tel-input", never, { "required": "required"; "disabled": "disabled"; "internationalFormat": "internationalFormat"; }, { "blur": "blur"; }, never, never>;
}

//# sourceMappingURL=lac-mat-tel-input.component.d.ts.map