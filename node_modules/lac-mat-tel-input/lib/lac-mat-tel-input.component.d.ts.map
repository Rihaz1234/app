{"version":3,"file":"lac-mat-tel-input.component.d.ts","sources":["lac-mat-tel-input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport type { OnInit, OnDestroy } from '@angular/core';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { Subject } from 'rxjs';\r\nimport { NgControl } from '@angular/forms';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { CountryCode } from 'libphonenumber-js';\r\nexport declare class LacMatTelInputComponent implements OnInit, OnDestroy, MatFormFieldControl<string> {\r\n    ngControl: NgControl;\r\n    private fm;\r\n    private elRef;\r\n    private changeDetector;\r\n    blur: EventEmitter<any>;\r\n    PhoneNumberMaxDigits: number;\r\n    phone: string;\r\n    phoneInput: MatInput;\r\n    maxInputLength: number;\r\n    countryChange: Subject<CountryCode>;\r\n    private selectedCountry;\r\n    stateChanges: Subject<void>;\r\n    _value: string;\r\n    set value(v: string | null);\r\n    static nextId: number;\r\n    id: string;\r\n    private _placeholder;\r\n    get placeholder(): string;\r\n    set placeholder(val: string);\r\n    focused: boolean;\r\n    get empty(): boolean;\r\n    get shouldLabelFloat(): boolean;\r\n    private _required;\r\n    get required(): boolean;\r\n    set required(req: boolean);\r\n    private inputDisabled;\r\n    get disabled(): boolean;\r\n    set disabled(value: boolean);\r\n    get errorState(): boolean;\r\n    controlType?: string;\r\n    autofilled?: boolean;\r\n    describedBy: string;\r\n    setDescribedByIds(ids: string[]): void;\r\n    onContainerClick(event: MouseEvent): void;\r\n    writeValue(value: string): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    onTouched: () => void;\r\n    propagateChange: (_: any) => void;\r\n    private _internationalFormat;\r\n    get internationalFormat(): boolean;\r\n    set internationalFormat(format: boolean);\r\n    constructor(ngControl: NgControl, fm: FocusMonitor, elRef: ElementRef<HTMLElement>, changeDetector: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    onCountrySelected(code: CountryCode, noPhoneReset?: boolean): void;\r\n    onInputChanged(e: string): void;\r\n    onInputKeyPress(event: KeyboardEvent): void;\r\n}\r\n"]}