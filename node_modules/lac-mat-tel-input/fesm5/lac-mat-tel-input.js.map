{"version":3,"file":"lac-mat-tel-input.js","sources":["ng://lac-mat-tel-input/lib/data/country-code.ts","ng://lac-mat-tel-input/lib/lac-mat-tel-input.component.ts","ng://lac-mat-tel-input/lib/lac-mat-country-selector/lac-mat-country-selector.component.ts","ng://lac-mat-tel-input/lib/search.pipe.ts","ng://lac-mat-tel-input/lib/lac-mat-tel-input.module.ts","ng://lac-mat-tel-input/lib/lac-mat-tel-input.validator.ts","ng://lac-mat-tel-input/public_api.ts","ng://lac-mat-tel-input/lac-mat-tel-input.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\n@Injectable()\nexport class CountryCode {\n  public allCountries = [\n    ['Afghanistan (‫افغانستان‬‎)', 'af', '93'],\n    ['Albania (Shqipëri)', 'al', '355'],\n    ['Algeria (‫الجزائر‬‎)', 'dz', '213'],\n    ['American Samoa', 'as', '1684'],\n    ['Andorra', 'ad', '376'],\n    ['Angola', 'ao', '244'],\n    ['Anguilla', 'ai', '1264'],\n    ['Antigua and Barbuda', 'ag', '1268'],\n    ['Argentina', 'ar', '54'],\n    ['Armenia (Հայաստան)', 'am', '374'],\n    ['Aruba', 'aw', '297'],\n    ['Australia', 'au', '61', 0],\n    ['Austria (Österreich)', 'at', '43'],\n    ['Azerbaijan (Azərbaycan)', 'az', '994'],\n    ['Bahamas', 'bs', '1242'],\n    ['Bahrain (‫البحرين‬‎)', 'bh', '973'],\n    ['Bangladesh (বাংলাদেশ)', 'bd', '880'],\n    ['Barbados', 'bb', '1246'],\n    ['Belarus (Беларусь)', 'by', '375'],\n    ['Belgium (België)', 'be', '32'],\n    ['Belize', 'bz', '501'],\n    ['Benin (Bénin)', 'bj', '229'],\n    ['Bermuda', 'bm', '1441'],\n    ['Bhutan (འབྲུག)', 'bt', '975'],\n    ['Bolivia', 'bo', '591'],\n    ['Bosnia and Herzegovina (Босна и Херцеговина)', 'ba', '387'],\n    ['Botswana', 'bw', '267'],\n    ['Brazil (Brasil)', 'br', '55'],\n    ['British Indian Ocean Territory', 'io', '246'],\n    ['British Virgin Islands', 'vg', '1284'],\n    ['Brunei', 'bn', '673'],\n    ['Bulgaria (България)', 'bg', '359'],\n    ['Burkina Faso', 'bf', '226'],\n    ['Burundi (Uburundi)', 'bi', '257'],\n    ['Cambodia (កម្ពុជា)', 'kh', '855'],\n    ['Cameroon (Cameroun)', 'cm', '237'],\n    ['Canada', 'ca', '1', 1, ['204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416', '418', '431', '437',\n      '438', '450', '506', '514', '519', '548', '579', '581', '587', '604', '613', '639', '647', '672', '705', '709', '742',\n      '778', '780', '782', '807', '819', '825', '867', '873', '902', '905']],\n    ['Cape Verde (Kabu Verdi)', 'cv', '238'],\n    ['Caribbean Netherlands', 'bq', '599', 1],\n    ['Cayman Islands', 'ky', '1345'],\n    ['Central African Republic (République centrafricaine)', 'cf', '236'],\n    ['Chad (Tchad)', 'td', '235'],\n    ['Chile', 'cl', '56'],\n    ['China (中国)', 'cn', '86'],\n    ['Christmas Island', 'cx', '61', 2],\n    ['Cocos (Keeling) Islands', 'cc', '61', 1],\n    ['Colombia', 'co', '57'],\n    ['Comoros (‫جزر القمر‬‎)', 'km', '269'],\n    ['Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)', 'cd', '243'],\n    ['Congo (Republic) (Congo-Brazzaville)', 'cg', '242'],\n    ['Cook Islands', 'ck', '682'],\n    ['Costa Rica', 'cr', '506'],\n    ['Côte d’Ivoire', 'ci', '225'],\n    ['Croatia (Hrvatska)', 'hr', '385'],\n    ['Cuba', 'cu', '53'],\n    ['Curaçao', 'cw', '599', 0],\n    ['Cyprus (Κύπρος)', 'cy', '357'],\n    ['Czech Republic (Česká republika)', 'cz', '420'],\n    ['Denmark (Danmark)', 'dk', '45'],\n    ['Djibouti', 'dj', '253'],\n    ['Dominica', 'dm', '1767'],\n    ['Dominican Republic (República Dominicana)', 'do', '1', 2, ['809', '829', '849']], ['Ecuador', 'ec', '593'],\n    ['Egypt (‫مصر‬‎)', 'eg', '20'],\n    ['El Salvador', 'sv', '503'],\n    ['Equatorial Guinea (Guinea Ecuatorial)', 'gq', '240'],\n    ['Eritrea', 'er', '291'],\n    ['Estonia (Eesti)', 'ee', '372'],\n    ['Ethiopia', 'et', '251'],\n    ['Falkland Islands (Islas Malvinas)', 'fk', '500'],\n    ['Faroe Islands (Føroyar)', 'fo', '298'],\n    ['Fiji', 'fj', '679'],\n    ['Finland (Suomi)', 'fi', '358', 0],\n    ['France', 'fr', '33'],\n    ['French Guiana (Guyane française)', 'gf', '594'],\n    ['French Polynesia (Polynésie française)', 'pf', '689'],\n    ['Gabon', 'ga', '241'],\n    ['Gambia', 'gm', '220'],\n    ['Georgia (საქართველო)', 'ge', '995'],\n    ['Germany (Deutschland)', 'de', '49'],\n    ['Ghana (Gaana)', 'gh', '233'],\n    ['Gibraltar', 'gi', '350'],\n    ['Greece (Ελλάδα)', 'gr', '30'],\n    ['Greenland (Kalaallit Nunaat)', 'gl', '299'],\n    ['Grenada', 'gd', '1473'],\n    ['Guadeloupe', 'gp', '590', 0],\n    ['Guam', 'gu', '1671'],\n    ['Guatemala', 'gt', '502'],\n    ['Guernsey', 'gg', '44', 1],\n    ['Guinea (Guinée)', 'gn', '224'],\n    ['Guinea-Bissau (Guiné Bissau)', 'gw', '245'],\n    ['Guyana', 'gy', '592'],\n    ['Haiti', 'ht', '509'],\n    ['Honduras', 'hn', '504'],\n    ['Hong Kong (香港)', 'hk', '852'],\n    ['Hungary (Magyarország)', 'hu', '36'],\n    ['Iceland (Ísland)', 'is', '354'],\n    ['India (भारत)', 'in', '91'],\n    ['Indonesia', 'id', '62'],\n    ['Iran (‫ایران‬‎)', 'ir', '98'],\n    ['Iraq (‫العراق‬‎)', 'iq', '964'],\n    ['Ireland', 'ie', '353'],\n    ['Isle of Man', 'im', '44', 2],\n    ['Israel (‫ישראל‬‎)', 'il', '972'],\n    ['Italy (Italia)', 'it', '39', 0],\n    ['Jamaica', 'jm', '1', 4, ['876', '658']], ['Japan (日本)', 'jp', '81'],\n    ['Jersey', 'je', '44', 3],\n    ['Jordan (‫الأردن‬‎)', 'jo', '962'],\n    ['Kazakhstan (Казахстан)', 'kz', '7', 1],\n    ['Kenya', 'ke', '254'],\n    ['Kiribati', 'ki', '686'],\n    ['Kosovo', 'xk', '383'],\n    ['Kuwait (‫الكويت‬‎)', 'kw', '965'],\n    ['Kyrgyzstan (Кыргызстан)', 'kg', '996'],\n    ['Laos (ລາວ)', 'la', '856'],\n    ['Latvia (Latvija)', 'lv', '371'],\n    ['Lebanon (‫لبنان‬‎)', 'lb', '961'],\n    ['Lesotho', 'ls', '266'],\n    ['Liberia', 'lr', '231'],\n    ['Libya (‫ليبيا‬‎)', 'ly', '218'],\n    ['Liechtenstein', 'li', '423'],\n    ['Lithuania (Lietuva)', 'lt', '370'],\n    ['Luxembourg', 'lu', '352'],\n    ['Macau (澳門)', 'mo', '853'],\n    ['Macedonia (FYROM) (Македонија)', 'mk', '389'],\n    ['Madagascar (Madagasikara)', 'mg', '261'],\n    ['Malawi', 'mw', '265'],\n    ['Malaysia', 'my', '60'],\n    ['Maldives', 'mv', '960'],\n    ['Mali', 'ml', '223'],\n    ['Malta', 'mt', '356'],\n    ['Marshall Islands', 'mh', '692'],\n    ['Martinique', 'mq', '596'],\n    ['Mauritania (‫موريتانيا‬‎)', 'mr', '222'],\n    ['Mauritius (Moris)', 'mu', '230'],\n    ['Mayotte', 'yt', '262', 1],\n    ['Mexico (México)', 'mx', '52'],\n    ['Micronesia', 'fm', '691'],\n    ['Moldova (Republica Moldova)', 'md', '373'],\n    ['Monaco', 'mc', '377'],\n    ['Mongolia (Монгол)', 'mn', '976'],\n    ['Montenegro (Crna Gora)', 'me', '382'],\n    ['Montserrat', 'ms', '1664'],\n    ['Morocco (‫المغرب‬‎)', 'ma', '212', 0],\n    ['Mozambique (Moçambique)', 'mz', '258'],\n    ['Myanmar (Burma) (မြန်မာ)', 'mm', '95'],\n    ['Namibia (Namibië)', 'na', '264'],\n    ['Nauru', 'nr', '674'],\n    ['Nepal (नेपाल)', 'np', '977'],\n    ['Netherlands (Nederland)', 'nl', '31'],\n    ['New Caledonia (Nouvelle-Calédonie)', 'nc', '687'],\n    ['New Zealand', 'nz', '64'],\n    ['Nicaragua', 'ni', '505'],\n    ['Niger (Nijar)', 'ne', '227'],\n    ['Nigeria', 'ng', '234'],\n    ['Niue', 'nu', '683'],\n    ['Norfolk Island', 'nf', '672'],\n    ['North Korea (조선 민주주의 인민 공화국)', 'kp', '850'],\n    ['Northern Mariana Islands', 'mp', '1670'],\n    ['Norway (Norge)', 'no', '47', 0],\n    ['Oman (‫عُمان‬‎)', 'om', '968'],\n    ['Pakistan (‫پاکستان‬‎)', 'pk', '92'],\n    ['Palau', 'pw', '680'],\n    ['Palestine (‫فلسطين‬‎)', 'ps', '970'],\n    ['Panama (Panamá)', 'pa', '507'],\n    ['Papua New Guinea', 'pg', '675'],\n    ['Paraguay', 'py', '595'],\n    ['Peru (Perú)', 'pe', '51'],\n    ['Philippines', 'ph', '63'],\n    ['Poland (Polska)', 'pl', '48'],\n    ['Portugal', 'pt', '351'],\n    ['Puerto Rico', 'pr', '1', 3, ['787', '939']], ['Qatar (‫قطر‬‎)', 'qa', '974'],\n    ['Réunion (La Réunion)', 're', '262', 0],\n    ['Romania (România)', 'ro', '40'],\n    ['Russia (Россия)', 'ru', '7', 0],\n    ['Rwanda', 'rw', '250'],\n    ['Saint Barthélemy', 'bl', '590', 1],\n    ['Saint Helena', 'sh', '290'],\n    ['Saint Kitts and Nevis', 'kn', '1869'],\n    ['Saint Lucia', 'lc', '1758'],\n    ['Saint Martin (Saint-Martin (partie française))', 'mf', '590', 2],\n    ['Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)', 'pm', '508'],\n    ['Saint Vincent and the Grenadines', 'vc', '1784'],\n    ['Samoa', 'ws', '685'],\n    ['San Marino', 'sm', '378'],\n    ['São Tomé and Príncipe (São Tomé e Príncipe)', 'st', '239'],\n    ['Saudi Arabia (‫المملكة العربية السعودية‬‎)', 'sa', '966'],\n    ['Senegal (Sénégal)', 'sn', '221'],\n    ['Serbia (Србија)', 'rs', '381'],\n    ['Seychelles', 'sc', '248'],\n    ['Sierra Leone', 'sl', '232'],\n    ['Singapore', 'sg', '65'],\n    ['Sint Maarten', 'sx', '1721'],\n    ['Slovakia (Slovensko)', 'sk', '421'],\n    ['Slovenia (Slovenija)', 'si', '386'],\n    ['Solomon Islands', 'sb', '677'],\n    ['Somalia (Soomaaliya)', 'so', '252'],\n    ['South Africa', 'za', '27'],\n    ['South Korea (대한민국)', 'kr', '82'],\n    ['South Sudan (‫جنوب السودان‬‎)', 'ss', '211'],\n    ['Spain (España)', 'es', '34'],\n    ['Sri Lanka (ශ්‍රී ලංකාව)', 'lk', '94'],\n    ['Sudan (‫السودان‬‎)', 'sd', '249'],\n    ['Suriname', 'sr', '597'],\n    ['Svalbard and Jan Mayen', 'sj', '47', 1],\n    ['Swaziland', 'sz', '268'],\n    ['Sweden (Sverige)', 'se', '46'],\n    ['Switzerland (Schweiz)', 'ch', '41'],\n    ['Syria (‫سوريا‬‎)', 'sy', '963'],\n    ['Taiwan (台灣)', 'tw', '886'],\n    ['Tajikistan', 'tj', '992'],\n    ['Tanzania', 'tz', '255'],\n    ['Thailand (ไทย)', 'th', '66'],\n    ['Timor-Leste', 'tl', '670'],\n    ['Togo', 'tg', '228'],\n    ['Tokelau', 'tk', '690'],\n    ['Tonga', 'to', '676'],\n    ['Trinidad and Tobago', 'tt', '1868'],\n    ['Tunisia (‫تونس‬‎)', 'tn', '216'],\n    ['Turkey (Türkiye)', 'tr', '90'],\n    ['Turkmenistan', 'tm', '993'],\n    ['Turks and Caicos Islands', 'tc', '1649'],\n    ['Tuvalu', 'tv', '688'],\n    ['U.S. Virgin Islands', 'vi', '1340'],\n    ['Uganda', 'ug', '256'],\n    ['Ukraine (Україна)', 'ua', '380'],\n    ['United Arab Emirates (‫الإمارات العربية المتحدة‬‎)', 'ae', '971'],\n    ['United Kingdom', 'gb', '44', 0],\n    ['United States', 'us', '1', 0],\n    ['Uruguay', 'uy', '598'],\n    ['Uzbekistan (Oʻzbekiston)', 'uz', '998'],\n    ['Vanuatu', 'vu', '678'],\n    ['Vatican City (Città del Vaticano)', 'va', '39', 1],\n    ['Venezuela', 've', '58'],\n    ['Vietnam (Việt Nam)', 'vn', '84'],\n    ['Wallis and Futuna (Wallis-et-Futuna)', 'wf', '681'],\n    ['Western Sahara (‫الصحراء الغربية‬‎)', 'eh', '212', 1],\n    ['Yemen (‫اليمن‬‎)', 'ye', '967'],\n    ['Zambia', 'zm', '260'],\n    ['Zimbabwe', 'zw', '263'],\n    ['Åland Islands', 'ax', '358', 1]];\n}\n\nexport const Examples: any = {\n  '001': '001',\n  AC: '40123',\n  AD: '312345',\n  AE: '501234567',\n  AF: '701234567',\n  AG: '2684641234',\n  AI: '2642351234',\n  AL: '662123456',\n  AM: '77123456',\n  AO: '923123456',\n  AR: '91123456789',\n  AS: '6847331234',\n  AT: '664123456',\n  AU: '412345678',\n  AW: '5601234',\n  AX: '412345678',\n  AZ: '401234567',\n  BA: '61123456',\n  BB: '2462501234',\n  BD: '1812345678',\n  BE: '470123456',\n  BF: '70123456',\n  BG: '48123456',\n  BH: '36001234',\n  BI: '79561234',\n  BJ: '90011234',\n  BL: '690001234',\n  BM: '4413701234',\n  BN: '7123456',\n  BO: '71234567',\n  BQ: '3181234',\n  BR: '11961234567',\n  BS: '2423591234',\n  BT: '17123456',\n  BW: '71123456',\n  BY: '294911911',\n  BZ: '6221234',\n  CA: '5062345678',\n  CC: '412345678',\n  CD: '991234567',\n  CF: '70012345',\n  CG: '061234567',\n  CH: '781234567',\n  CI: '01234567',\n  CK: '71234',\n  CL: '221234567',\n  CM: '671234567',\n  CN: '13123456789',\n  CO: '3211234567',\n  CR: '83123456',\n  CU: '51234567',\n  CV: '9911234',\n  CW: '95181234',\n  CX: '412345678',\n  CY: '96123456',\n  CZ: '601123456',\n  DE: '15123456789',\n  DJ: '77831001',\n  DK: '32123456',\n  DM: '7672251234',\n  DO: '8092345678',\n  DZ: '551234567',\n  EC: '991234567',\n  EE: '51234567',\n  EG: '1001234567',\n  EH: '650123456',\n  ER: '7123456',\n  ES: '612345678',\n  ET: '911234567',\n  FI: '412345678',\n  FJ: '7012345',\n  FK: '51234',\n  FM: '3501234',\n  FO: '211234',\n  FR: '612345678',\n  GA: '06031234',\n  GB: '7400123456',\n  GD: '4734031234',\n  GE: '555123456',\n  GF: '694201234',\n  GG: '7781123456',\n  GH: '231234567',\n  GI: '57123456',\n  GL: '221234',\n  GM: '3012345',\n  GN: '601123456',\n  GP: '690001234',\n  GQ: '222123456',\n  GR: '6912345678',\n  GT: '51234567',\n  GU: '6713001234',\n  GW: '955012345',\n  GY: '6091234',\n  HK: '51234567',\n  HN: '91234567',\n  HR: '921234567',\n  HT: '34101234',\n  HU: '201234567',\n  ID: '812345678',\n  IE: '850123456',\n  IL: '502345678',\n  IM: '7924123456',\n  IN: '8123456789',\n  IO: '3801234',\n  IQ: '7912345678',\n  IR: '9123456789',\n  IS: '6111234',\n  IT: '3123456789',\n  JE: '7797712345',\n  JM: '8762101234',\n  JO: '790123456',\n  JP: '9012345678',\n  KE: '712123456',\n  KG: '700123456',\n  KH: '91234567',\n  KI: '72001234',\n  KM: '3212345',\n  KN: '8697652917',\n  KP: '1921234567',\n  KR: '1000000000',\n  KW: '50012345',\n  KY: '3453231234',\n  KZ: '7710009998',\n  LA: '2023123456',\n  LB: '71123456',\n  LC: '7582845678',\n  LI: '660234567',\n  LK: '712345678',\n  LR: '770123456',\n  LS: '50123456',\n  LT: '61234567',\n  LU: '628123456',\n  LV: '21234567',\n  LY: '912345678',\n  MA: '650123456',\n  MC: '612345678',\n  MD: '62112345',\n  ME: '67622901',\n  MF: '690001234',\n  MG: '321234567',\n  MH: '2351234',\n  MK: '72345678',\n  ML: '65012345',\n  MM: '92123456',\n  MN: '88123456',\n  MO: '66123456',\n  MP: '6702345678',\n  MQ: '696201234',\n  MR: '22123456',\n  MS: '6644923456',\n  MT: '96961234',\n  MU: '52512345',\n  MV: '7712345',\n  MW: '991234567',\n  MX: '12221234567',\n  MY: '123456789',\n  MZ: '821234567',\n  NA: '811234567',\n  NC: '751234',\n  NE: '93123456',\n  NF: '381234',\n  NG: '8021234567',\n  NI: '81234567',\n  NL: '612345678',\n  NO: '40612345',\n  NP: '9841234567',\n  NR: '5551234',\n  NU: '8884012',\n  NZ: '211234567',\n  OM: '92123456',\n  PA: '61234567',\n  PE: '912345678',\n  PF: '87123456',\n  PG: '70123456',\n  PH: '9051234567',\n  PK: '3012345678',\n  PL: '512345678',\n  PM: '551234',\n  PR: '7872345678',\n  PS: '599123456',\n  PT: '912345678',\n  PW: '6201234',\n  PY: '961456789',\n  QA: '33123456',\n  RE: '692123456',\n  RO: '712034567',\n  RS: '601234567',\n  RU: '9123456789',\n  RW: '720123456',\n  SA: '512345678',\n  SB: '7421234',\n  SC: '2510123',\n  SD: '911231234',\n  SE: '701234567',\n  SG: '81234567',\n  SH: '51234',\n  SI: '31234567',\n  SJ: '41234567',\n  SK: '912123456',\n  SL: '25123456',\n  SM: '66661212',\n  SN: '701234567',\n  SO: '71123456',\n  SR: '7412345',\n  SS: '977123456',\n  ST: '9812345',\n  SV: '70123456',\n  SX: '7215205678',\n  SY: '944567890',\n  SZ: '76123456',\n  TA: '8999',\n  TC: '6492311234',\n  TD: '63012345',\n  TG: '90112345',\n  TH: '812345678',\n  TJ: '917123456',\n  TK: '7290',\n  TL: '77212345',\n  TM: '66123456',\n  TN: '20123456',\n  TO: '7715123',\n  TR: '5012345678',\n  TT: '8682911234',\n  TV: '901234',\n  TW: '912345678',\n  TZ: '621234567',\n  UA: '501234567',\n  UG: '712345678',\n  US: '2015550123',\n  UY: '94231234',\n  UZ: '912345678',\n  VA: '3123456789',\n  VC: '7844301234',\n  VE: '4121234567',\n  VG: '2843001234',\n  VI: '3406421234',\n  VN: '912345678',\n  VU: '5912345',\n  WF: '501234',\n  WS: '7212345',\n  XK: '43201234',\n  YE: '712345678',\n  YT: '639012345',\n  ZA: '711234567',\n  ZM: '955123456',\n  ZW: '712345678'\n};\n","import { Component, HostBinding, Input, Optional, Self, ElementRef, ViewChild, EventEmitter, Output, ChangeDetectorRef } from '@angular/core';\nimport type { OnInit, OnDestroy } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { Subject } from 'rxjs';\nimport { NgControl } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getExampleNumber, parsePhoneNumberFromString, AsYouType, CountryCode, getCountryCallingCode } from 'libphonenumber-js';\nimport { Examples } from './data/country-code';\n\n@Component({\n  selector: 'lac-mat-tel-input',\n  templateUrl: './lac-mat-tel-input.component.html',\n  styleUrls: ['./lac-mat-tel-input.component.scss'],\n  providers: [{provide: MatFormFieldControl, useExisting: LacMatTelInputComponent}]\n})\nexport class LacMatTelInputComponent implements OnInit, OnDestroy, MatFormFieldControl<string> {\n  @Output()\n  blur: EventEmitter<any> = new EventEmitter<any>();\n\n  PhoneNumberMaxDigits: number = 20;\n\n  phone: string;\n  @ViewChild('phoneInput', { static: true }) phoneInput: MatInput;\n\n  maxInputLength: number = this.PhoneNumberMaxDigits;\n\n  //Subject to notify when country needs to be update from input\n  //Se paste condition in onInputChanged\n  countryChange = new Subject<CountryCode>();\n  \n  private selectedCountry: CountryCode;\n\n  //Mat Form Field implementation - BEGIN\n  stateChanges = new Subject<void>();\n\n  //the value of the FormFieldControl\n  _value: string;\n  set value(v: string | null) {//whenever value changes -> this.stateChanges.next(); so form-field runs change detection\n    this._value =  v ? `+${getCountryCallingCode(this.selectedCountry)} ${v}` : v;\n    if (this.internationalFormat && this._value) {\n      let phoneNumber = parsePhoneNumberFromString(this._value);\n\n      if (phoneNumber && phoneNumber.isValid()) {\n        this._value = phoneNumber.formatInternational();\n      }\n    }\n    this.propagateChange(this._value);\n    this.stateChanges.next();\n  };\n\n  //the id of an element to associate labels and hints with.\n  static nextId = 0;\n  @HostBinding() id: string = `lac-mat-tel-input-${LacMatTelInputComponent.nextId++}`;\n\n  //placeholder\n  private _placeholder: string;\n\n  get placeholder(): string {\n    return this._placeholder;\n  };\n  set placeholder(val) {\n    this._placeholder = val;\n    this.stateChanges.next();\n  }\n\n  //ngControl: NgControl; set with Dependency Injection\n\n  focused: boolean = false;\n\n  get empty(): boolean {\n    return !this.phone;\n  };\n\n  //shouldLabelFloat: boolean;\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  //adds a required indicator to the label/placeholder\n  private _required = false;\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  private inputDisabled = false;\n  @Input()\n  get disabled(): boolean { return this.inputDisabled || this.ngControl.disabled; }\n  set disabled(value: boolean) {\n    this.inputDisabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  get errorState() {\n    return this.ngControl && this.ngControl.errors !== null && !!this.ngControl.touched;\n  }\n\n  controlType?: string = 'mat-tel';\n\n  autofilled?: boolean;\n\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n  setDescribedByIds(ids: string[]): void {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent): void {\n    if (!this.disabled) {\n      this.onTouched();\n    }\n  }\n  //Mat Form Field implementation - END\n\n  //ControlValueAccessor - BEGIN\n  writeValue(value: string): void {\n    this.onInputChanged(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onTouched = () => {\n  }\n\n  propagateChange = (_: any) => {\n  }\n  //ControlValueAccessor - END\n\n  private _internationalFormat = false;\n  @Input()\n  get internationalFormat() {\n    return this._internationalFormat;\n  }\n  set internationalFormat(format) {\n    this._internationalFormat = coerceBooleanProperty(format);\n    this.onInputChanged(this.phone);\n  }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private fm: FocusMonitor,\n    private elRef: ElementRef<HTMLElement>,\n    private changeDetector: ChangeDetectorRef\n  ) { \n     if (this.ngControl != null) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  //lifecycle\n  ngOnInit() {\n    \n  }\n\n  ngOnDestroy(): void {\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n    this.countryChange.complete();\n    this.stateChanges.complete();\n  }\n\n  onCountrySelected(code: CountryCode, noPhoneReset?: boolean) {\n    let hasCountryChanged = this.selectedCountry && this.selectedCountry != code;\n    this.selectedCountry = code;\n\n    let example = getExampleNumber(code, Examples).formatNational();\n    let numbersOnly = example.replace(/[^\\d]/g, '');\n    let maxExample = numbersOnly + '9999999999';\n\n    this.maxInputLength = this.PhoneNumberMaxDigits;\n\n    //find out the maximum (formatted) size a valid number for the country can have\n    for (let i = maxExample.length; i >= 0; i--) {\n      let test = maxExample.substring(0, i);\n      let testPhone = parsePhoneNumberFromString(test, code);\n\n      if (testPhone && testPhone.isValid()) {\n        let maxInput = new AsYouType(code).input(test);\n        this.maxInputLength = maxInput.length;\n        this.placeholder = maxInput;//TODO set placeholder optionally\n        break;\n      }\n    }\n\n    //when new country is selected reset phone if phone reset was not disabled \n    if (hasCountryChanged && !noPhoneReset) {\n      this.phone = '';\n      this.value = this.phone;\n\n      //focus on input\n      if (this.phoneInput) {\n        setTimeout(() => this.phoneInput.focus());\n      }\n    }\n  }\n\n  onInputChanged(e: string) {\n    if (!e) {\n      e = '';\n    }\n    \n    this.phone = e;\n\n    if (e.startsWith('+')) {//handles pasting of a complete international number\n      try {\n        let pastedNumber  = parsePhoneNumberFromString(e);\n\n        if (pastedNumber && pastedNumber.country) {\n          let code = pastedNumber.country;\n          \n          this.onCountrySelected(code, true);\n\n          this.countryChange.next(code);\n\n          setTimeout(() => {\n            this.phone = pastedNumber.formatNational();\n            this.value = this.phone;\n          });\n          return;\n        }\n      } catch {\n      }\n    }\n\n    let numbersOnly = e.replace(/[^\\d]/g, '');\n\n    setTimeout(() => {\n      let formatted = new AsYouType(this.selectedCountry).input(numbersOnly);\n      //if the formatted output equals what we already have then the user is trying to delete a symbol inserted by\n      //the formatted version\n      this.phone = formatted.substr(0, formatted.length - 1) === this.phone ? numbersOnly : formatted;\n      this.value = this.phone;\n    }, 0);\n  }\n\n  public onInputKeyPress(event: KeyboardEvent): void {\n\t\tconst allowedChars = /[0-9\\+\\-\\ ]/;\n\t\tconst allowedCtrlChars = /[axcv]/; // Allows copy-pasting\n\t\tconst allowedOtherKeys = [\n\t\t\t'ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown',\n\t\t\t'Home', 'End', 'Insert', 'Delete', 'Backspace'\n\t\t];\n\n\t\tif (!allowedChars.test(event.key)\n\t\t\t&& !(event.ctrlKey && allowedCtrlChars.test(event.key))\n\t\t\t&& !(allowedOtherKeys.includes(event.key))) {\n\t\t\tevent.preventDefault();\n    }\n\t}\n\n}\n","import { Component, OnInit, Input, EventEmitter, OnDestroy, Output, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { Country } from '../model/country.model';\nimport { CountryCode } from '../data/country-code';\nimport { CountryCode as LibCountryCode }  from 'libphonenumber-js';\nimport { LacMatTelInputComponent } from '../lac-mat-tel-input.component';\nimport { Observable, Subscription } from 'rxjs';\nimport { MatInput } from '@angular/material/input';\n\n@Component({\n  selector: 'lac-mat-country-selector',\n  templateUrl: './lac-mat-country-selector.component.html',\n  styleUrls: ['./lac-mat-country-selector.component.scss'],\n  providers: [CountryCode],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LacMatCountrySelectorComponent implements OnInit, OnDestroy {\n\n  @Input() \n  selectorFor: LacMatTelInputComponent;\n  @Input() \n  preferredCountries: Array<string> = [];\n  @Input() \n  onlyCountries: Array<string> = [];\n  @Input()\n  showDialCode?: boolean;\n  @Input()\n  disableSearch?: boolean;\n  @Input()\n  searchPlaceholder?: string;\n\n  @Output()\n  change: EventEmitter<Country> = new EventEmitter<Country>();\n\n  selectedCountry: Country;\n  allCountries: Array<Country> = [];\n  preferredCountriesInDropDown: Array<Country> = [];\n\n  get disabled() : boolean {\n    return this.selectorFor && this.selectorFor.disabled;\n  }\n  \n  searchQuery: string;\n  @ViewChild('searchInput') searchInput: MatInput;\n\n  private countrySubscription: Subscription;\n\n  constructor(\n    private countryCodeData: CountryCode\n  ) { \n    this.fetchCountryData();\n  }\n\n  //builds the All Countries array\n  protected fetchCountryData(): void {\n    this.countryCodeData.allCountries.forEach(c => {\n      const country: Country = {\n        name: c[0].toString(),\n        iso2: c[1].toString(),\n        dialCode: c[2].toString(),\n        priority: +c[3] || 0,\n        areaCodes: c[4] as string[] || undefined,\n        flagClass: c[1].toString().toUpperCase(),\n        placeHolder: ''\n      };\n\n      this.allCountries.push(country);\n    });\n  }\n\n  ngOnInit() {\n    //build preferred countries arrays if they are specified\n    if (this.preferredCountries.length) {\n      this.preferredCountries.forEach(iso2 => {\n        const preferredCountry = this.allCountries.filter((c) => {\n          return c.iso2 === iso2;\n        });\n        this.preferredCountriesInDropDown.push(preferredCountry[0]);\n      });\n    }\n\n    //filter countries if required\n    if (this.onlyCountries.length) {\n      this.allCountries = this.allCountries.filter(c => this.onlyCountries.includes(c.iso2));\n    }\n\n    //set the default selected a country\n    let defaultCountry: Country;\n    if (this.preferredCountriesInDropDown.length) {\n      defaultCountry = this.preferredCountriesInDropDown[0];\n    } else {\n      defaultCountry = this.allCountries[0];\n    }\n\n    if (this.selectorFor) {\n      this.countrySubscription = this.selectorFor.countryChange.subscribe(c => this.onCountryUpdateFromInput(c));\n    }\n\n    this.selectCountry(defaultCountry);\n  }\n\n  ngOnDestroy() {\n    if (this.countrySubscription) {\n      this.countrySubscription.unsubscribe();\n    }\n  }\n\n  selectCountry(country: Country) {\n    this.selectedCountry = country;\n\n    if (this.selectorFor) {\n      this.selectorFor.onCountrySelected(<LibCountryCode> country.flagClass);\n    }\n    this.change.next(country);\n  }\n\n  private onCountryUpdateFromInput(code: LibCountryCode) {\n    let country = this.allCountries.find((c) => {\n      return c.flagClass === code.toString();\n    });\n\n    this.selectedCountry = country;\n    this.change.next(country);\n  }\n\n  onOpenMenuClick() {\n    if (!this.disableSearch && this.searchInput) {\n      setTimeout(() => this.searchInput.focus());\n    }\n  }\n\n  onMenuClosed() {\n    this.searchQuery = '';\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(country: any, query?: any): any {\n    if (!query || query === '') {\n      return true;\n    }\n\n    return country.toLowerCase().includes(query.toLowerCase());\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { LacMatTelInputComponent } from './lac-mat-tel-input.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LacMatCountrySelectorComponent } from './lac-mat-country-selector/lac-mat-country-selector.component';\nimport { SearchPipe } from './search.pipe';\n\n@NgModule({\n  declarations: [LacMatTelInputComponent, LacMatCountrySelectorComponent, SearchPipe],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    MatMenuModule,\n    MatDividerModule,\n    MatButtonModule,\n    ReactiveFormsModule\n  ],\n  exports: [LacMatTelInputComponent, LacMatCountrySelectorComponent]\n})\nexport class LacMatTelInputModule { }\n","import {FormControl} from '@angular/forms';\nimport {parsePhoneNumber, PhoneNumber} from 'libphonenumber-js';\n\nexport const phoneNumberValidator = (control: FormControl) => {\n  const error = {invalidPhone: true};\n  let numberInstance: PhoneNumber;\n  \n  if (control.value) {\n    try {\n      numberInstance = parsePhoneNumber(control.value);\n    } catch (e) {\n      return error;\n    }\n\n    if (numberInstance && !numberInstance.isValid()) {\n      return error;\n    }\n  }\n};\n","/*\n * Public API Surface of lac-mat-tel-input\n */\n\nexport * from './lib/data/country-code';\nexport * from './lib/lac-mat-country-selector/lac-mat-country-selector.component';\nexport * from './lib/lac-mat-tel-input.component';\nexport * from './lib/lac-mat-tel-input.module';\nexport * from './lib/lac-mat-tel-input.validator';\nexport * from './lib/model/country.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {SearchPipe as ɵa} from './lib/search.pipe';"],"names":[],"mappings":"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"}