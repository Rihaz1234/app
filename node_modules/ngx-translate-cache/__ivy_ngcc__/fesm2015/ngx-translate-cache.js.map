{"version":3,"file":"ngx-translate-cache.js","sources":["ngx-translate-cache/lib/ngx-translate-cache.service.ts","ngx-translate-cache/lib/ngx-translate-cache.module.ts","ngx-translate-cache/public-api.ts","ngx-translate-cache/ngx-translate-cache.ts"],"names":[],"mappings":";;;;;IAIiB,eAGhB;AAHD,WAAiB,cAAc;AAC9B,IAAc,2BAAY,GAAuB,cAAc,CAAC;AACjE,IAAe,qBAAM,GAAuB,QAAQ,CAAC;AACrD,CAAC,EAHgB,cAAc,KAAd,cAAc,QAG9B;AACD,MACa,UAAU,GAAG,IAAI,cAAc,CAAS,YAAY,EAAE;AACnE,MAAa,eAAe,GAAG,IAAI,cAAc,CAAS,iBAAiB,EAAE;AAC7E,MAAa,aAAa,GAAG,IAAI,cAAc,CAAS,eAAe,EAAE;AASzE,MAAM,kBAAkB,GAAG,MAAM,CAAC;AAClC,MAAM,uBAAuB,GAAG,cAAc,CAAC,YAAY,CAAC;AAC5D,MAAM,qBAAqB,GAAG,GAAG,CAAC;AAClC,IAEa,sBAAsB,GAAnC,MAAa,sBAAsB;AACnC,IAAE,YAAuC,YAAoB,kBAAkB,EACjC,iBAAyB,uBAAuB,EAClD,eAAuB,qBAAqB;AAAI,QAFnD,cAAS,GAAT,SAAS,CAA6B;AAAC,QAClC,mBAAc,GAAd,cAAc,CAAkC;AAAC,QACnD,iBAAY,GAAZ,YAAY,CAAgC;AAAC,KAAG;AAC5F;;4KAAC;AACD;AAE0B,yCANX,MAAM,SAAC,UAAU;AAAS,yCAC1B,MAAM,SAAC,eAAe;AAAS,yCAC/B,MAAM,SAAC,aAAa;AAAQ;AAH9B,sBAAsB,oBADlC,UAAU,EAAE,jBACT,CACW,WAAA,MAAM,CAAC,UAAU,CAAC,CAAA;AAAE,IACpB,WAAA,MAAM,CAAC,eAAe,CAAC,CAAA;AAAE,IACzB,WAAA,MAAM,CAAC,aAAa,CAAC,CAAA;AAAC,GAHxB,sBAAsB,CAIlC;AAED;AACA,MAAa,qBAAqB;AAClC,IAAE,YAAoB,gBAAkC,EAClC,sBAA8C;AAAI,QADlD,qBAAgB,GAAhB,gBAAgB,CAAkB;AAAC,QACnC,2BAAsB,GAAtB,sBAAsB,CAAwB;AAAC,KAAG;AACxE,IACS,IAAI;AAAK,QACd,IAAI,CAAC,gBAAgB,CAAC,YAAY;AACtC,aAAO,SAAS,CAAC,CAAC,KAA6B;AAC/C,YAAQ,IAAI,IAAI,CAAC,sBAAsB,CAAC,cAAc,KAAK,cAAc,CAAC,YAAY,EAAE;AACxF,gBAAU,OAAO,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxD,aAAS;AACT,YACQ,IAAI,IAAI,CAAC,sBAAsB,CAAC,cAAc,KAAK,cAAc,CAAC,MAAM,EAAE;AAClF,gBAAU,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACnD,aAAS;AACT,SAAO,CAAC,CAAC;AACT,QACI,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;AAC3F,QACI,IAAI,WAAW,EAAE;AAAE,YAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAAC,SAAC;AAChE,KAAG;AACH,IACS,iBAAiB;AAAK,QAC3B,IAAI,IAAI,CAAC,sBAAsB,CAAC,cAAc,KAAK,cAAc,CAAC,YAAY,EAAE;AACpF,YAAM,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC1C,SAAK;AACL,QACI,IAAI,IAAI,CAAC,sBAAsB,CAAC,cAAc,KAAK,cAAc,CAAC,MAAM,EAAE;AAC9E,YAAM,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACrC,SAAK;AACL,KAAG;AACH,IACU,qBAAqB,CAAC,KAAc;AAAI,QAC9C,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,YAAY,KAAK,WAAW,EAAE;AAAE,YAAA,OAAO;AAAC,SAAC;AAChG,QACI,IAAI;AACR,YAAM,IAAI,KAAK,EAAE;AAAE,gBAAA,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAAC,gBAAA,OAAO;AAAC,aAAC;AACvG,YACM,OAAO,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;AAChF,SAAK;AAAC,QAAA,OAAO,CAAC,EAAE;AAAE,YAAA,OAAO;AAAC,SAAC;AAC3B,KAAG;AACH,IACU,gBAAgB,CAAC,KAAc;AAAI,QACzC,IAAI,OAAO,QAAQ,KAAK,WAAW,IAAI,OAAO,QAAQ,CAAC,MAAM,KAAK,WAAW,EAAE;AAAE,YAAA,OAAO;AAAC,SAAC;AAC9F,QACI,IAAI;AACR,YAAM,MAAM,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;AAC7E,YACM,IAAI,KAAK,EAAE;AACjB,gBAAQ,MAAM,IAAI,GAAS,IAAI,IAAI,EAAE,CAAC;AACtC,gBACQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,GAAG,OAAO,CAAC,CAAC;AAC1F,gBAAQ,QAAQ,CAAC,MAAM,GAAG,GAAG,IAAI,IAAI,kBAAkB,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;AAC/F,gBACQ,OAAO;AACf,aAAO;AACP,YAAM,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,GAAG,QAAQ,GAAG,IAAI,GAAG,gBAAgB,EAAE,GAAG,CAAC,CAAC;AACzF,YAAM,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAClD,YACM,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,SAAK;AAAC,QAAA,OAAO,CAAC,EAAE;AAAE,YAAA,OAAO;AAAC,SAAC;AAC3B,KAAG;AACH;AACA;AAAC;AAA4B,IClFhB,oBAAoB,4BAAjC,MAAa,oBAAoB;AACjC,IAAE,OAAO,OAAO,CAAC,MAA4B;AAAI,QAC7C,OAAO;AACX,YAAM,QAAQ,EAAE,sBAAoB;AACpC,YAAM,SAAS,EAAE;AACjB,gBAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC,SAAS,EAAE;AAC3D,gBAAQ,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,cAAc,EAAE;AACrE,gBAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,CAAC,YAAY,EAAE;AACjE,gBAAQ,sBAAsB;AAC9B,gBAAQ,MAAM,CAAC,YAAY;AAC3B,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH,EAAC;AAbY,oBAAoB,6CAPhC,QAAQ,CAAC,UACR,OAAO,EAAE,cACP;GAAY,UACb,UACD,YAAY,EAAE,EAAE,UAChB,OAAO,EAAE,EAAE,MACZ,CAAC,IACW,oBAAoB,CAahC;;;;;;;;;;;;;;;;;;;;;;;;;;6KACD;AAAC;AC1BD;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AAC8G","sourcesContent":["import { Inject, Injectable, InjectionToken, Provider } from '@angular/core';\nimport { TranslateService, TranslationChangeEvent } from '@ngx-translate/core';\n\nexport type CacheMechanismType = 'LocalStorage' | 'Cookie';\nexport namespace CacheMechanism {\n  export const LocalStorage: CacheMechanismType = 'LocalStorage';\n  export const Cookie: CacheMechanismType = 'Cookie';\n}\n\nexport const CACHE_NAME = new InjectionToken<string>('CACHE_NAME');\nexport const CACHE_MECHANISM = new InjectionToken<string>('CACHE_MECHANISM');\nexport const COOKIE_EXPIRY = new InjectionToken<string>('COOKIE_EXPIRY');\n\nexport interface TranslateCacheConfig {\n  cacheService: Provider;\n  cacheName?: string;\n  cacheMechanism?: CacheMechanismType;\n  cookieExpiry?: number;\n}\n\nconst DEFAULT_CACHE_NAME = 'lang';\nconst DEFAULT_CACHE_MECHANISM = CacheMechanism.LocalStorage;\nconst DEFAULT_COOKIE_EXPIRY = 720;\n\n@Injectable()\nexport class TranslateCacheSettings {\n  constructor(@Inject(CACHE_NAME) public cacheName: string = DEFAULT_CACHE_NAME,\n              @Inject(CACHE_MECHANISM) public cacheMechanism: string = DEFAULT_CACHE_MECHANISM,\n              @Inject(COOKIE_EXPIRY) public cookieExpiry: number = DEFAULT_COOKIE_EXPIRY) {}\n}\n\n/* Not injectable */\nexport class TranslateCacheService {\n  constructor(private translateService: TranslateService,\n              private translateCacheSettings: TranslateCacheSettings) {}\n\n  public init(): void {\n    this.translateService.onLangChange\n      .subscribe((event: TranslationChangeEvent) => {\n        if (this.translateCacheSettings.cacheMechanism === CacheMechanism.LocalStorage) {\n          return this.cacheWithLocalStorage(event.lang);\n        }\n\n        if (this.translateCacheSettings.cacheMechanism === CacheMechanism.Cookie) {\n          return this.cacheWithCookies(event.lang);\n        }\n      });\n\n    const currentLang = this.getCachedLanguage() || this.translateService.getBrowserLang();\n\n    if (currentLang) { this.translateService.use(currentLang); }\n  }\n\n  public getCachedLanguage(): string {\n    if (this.translateCacheSettings.cacheMechanism === CacheMechanism.LocalStorage) {\n      return this.cacheWithLocalStorage();\n    }\n\n    if (this.translateCacheSettings.cacheMechanism === CacheMechanism.Cookie) {\n      return this.cacheWithCookies();\n    }\n  }\n\n  private cacheWithLocalStorage(value?: string): string {\n    if (typeof window === 'undefined' || typeof window.localStorage === 'undefined') { return; }\n\n    try {\n      if (value) { window.localStorage.setItem(this.translateCacheSettings.cacheName, value); return; }\n\n      return window.localStorage.getItem(this.translateCacheSettings.cacheName);\n    } catch (e) { return; }\n  }\n\n  private cacheWithCookies(value?: string): string {\n    if (typeof document === 'undefined' || typeof document.cookie === 'undefined') { return; }\n\n    try {\n      const name = encodeURIComponent(this.translateCacheSettings.cacheName);\n\n      if (value) {\n        const date: Date = new Date();\n\n        date.setTime(date.getTime() + this.translateCacheSettings.cookieExpiry * 3600000);\n        document.cookie = `${name}=${encodeURIComponent(value)};expires=${date.toUTCString()}`;\n\n        return;\n      }\n      const regexp = new RegExp('(?:^' + name + '|;\\\\s*' + name + ')=(.*?)(?:;|$)', 'g');\n      const result = regexp.exec(document.cookie);\n\n      return decodeURIComponent(result[1]);\n    } catch (e) { return; }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateCacheConfig, CACHE_NAME, CACHE_MECHANISM, COOKIE_EXPIRY,\n  TranslateCacheSettings } from './ngx-translate-cache.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  exports: []\n})\nexport class TranslateCacheModule {\n  static forRoot(config: TranslateCacheConfig): ModuleWithProviders<TranslateCacheModule> {\n    return {\n      ngModule: TranslateCacheModule,\n      providers: [\n        { provide: CACHE_NAME, useValue: config.cacheName },\n        { provide: CACHE_MECHANISM, useValue: config.cacheMechanism },\n        { provide: COOKIE_EXPIRY, useValue: config.cookieExpiry },\n        TranslateCacheSettings,\n        config.cacheService,\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-translate-cache\n */\n\nexport * from './lib/ngx-translate-cache.service';\nexport * from './lib/ngx-translate-cache.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}